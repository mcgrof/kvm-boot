#!/bin/sh
# Copyright (C) 2017 Luis R. Rodriguez <mcgrof@kernel.org>
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of copyleft-next (version 0.3.1 or later) as published
# at http://copyleft-next.org/.

function allow_user_defaults()
{
	if [ -z $KVM_BOOT_NETDEV ]; then
		KVM_BOOT_NETDEV=wlp3s0
	fi

	if [ -z $KVM_BOOT_TAP_DEV ]; then
		KVM_BOOT_TAP_DEV=tap0
	fi

	# Network information, these are sane values, you can keep them
	# unless they intefere with your network, ie, if you already make use
	# of this subnet. If you don't use this subnet it should be fine.
	if [ -z $KVM_BOOT_NETWORK ]; then
		KVM_BOOT_NETWORK=192.168.53.0
	fi

	if [ -z $KVM_BOOT_NETMASK ]; then
		KVM_BOOT_NETMASK=255.255.255.0
	fi

	if [ -z $KVM_BOOT_GATEWAY ]; then
		KVM_BOOT_GATEWAY=192.168.53.1
	fi

	if [ -z $KVM_BOOT_DHCPRANGE ]; then
		KVM_BOOT_DHCPRANGE=192.168.53.2,192.168.53.254
	fi

	if [ -z $KVM_BOOT_DNSMASQ_RUN_DIR ]; then
		KVM_BOOT_DNSMASQ_RUN_DIR=/var/lib/dnsmasq/
	fi

	if [ -z $KVM_BOOT_DNSMASQ_PID ]; then
		KVM_BOOT_DNSMASQ_PID=$KVM_BOOT_DNSMASQ_RUN_DIR/qemu-dnsmasq-$KVM_BOOT_TAP_DEV.pid
	fi

	if [ -z $KVM_BOOT_DNSMASQ_LEASE ]; then
		KVM_BOOT_DNSMASQ_LEASE=$KVM_BOOT_DNSMASQ_RUN_DIR/qemu-dnsmasq-$KVM_BOOT_TAP_DEV.leases
	fi

	# Optionally parameters to enable PXE support
	if [ -z $KVM_BOOT_TFTPROOT ]; then
		KVM_BOOT_TFTPROOT=
	fi

	if [ -z $KVM_BOOT_BOOTP ]; then
		KVM_BOOT_BOOTP=
	fi
}

do_ifconfig() {
    echo Calling:
    echo ifconfig "$@"
    ifconfig "$@"
}

do_iptables_restore() {
    iptables-restore "$@"
}

check_dnsmasq()
{
    if ! ps -ef| grep -v grep | grep dnsmasq >/dev/null 2> /dev/null; then
	return 0
    else
	return 1
    fi
}

do_dnsmasq() {
    if check_dnsmasq; then
	echo going to start DNS!
	dnsmasq "$@"
    fi
}

enable_ip_forward() {
	sysctl -w net.ipv4.ip_forward=1
}

flush_tables()
{
	for i in INPUT FORWARD OUTPUT; do
		iptables -F $i
	done
	iptables -t nat -D POSTROUTING 1
}

add_filter_rules()
{
	flush_tables
	echo Calling:
	echo iptables -t nat -A POSTROUTING -s $KVM_BOOT_NETWORK/24 -o $KVM_BOOT_NETDEV -j MASQUERADE
	iptables -t nat -A POSTROUTING -s $KVM_BOOT_NETWORK/24 -o $KVM_BOOT_NETDEV -j MASQUERADE
}

start_dnsmasq() {
    do_dnsmasq \
	--strict-order \
	--log-queries \
	--except-interface=lo \
	--no-dhcp-interface=$KVM_BOOT_NETDEV \
	--interface=$1 \
	--listen-address=$KVM_BOOT_GATEWAY \
	--bind-interfaces \
	--dhcp-range=$KVM_BOOT_DHCPRANGE \
	--conf-file="" \
	--dhcp-no-override \
	${KVM_BOOT_TFTPROOT:+"--enable-tftp"} \
	${KVM_BOOT_TFTPROOT:+"--tftp-root=$KVM_BOOT_TFTPROOT"} \
	${KVM_BOOT_BOOTP:+"--dhcp-boot=$KVM_BOOT_BOOTP"}
	#--dhcp-leasefile=$KVM_BOOT_DNSMASQ_LEASE \
	#--pid-file=$KVM_BOOT_DNSMASQ_PID \
}

check_vdeswitch()
{
	if ps -ef | grep -v grep | grep vde_switch >/dev/null 2> /dev/null; then
		return 1
	else
		return 0
	fi
}

do_vdeswitch() {
	if check_vdeswitch; then
		vde_switch "$@"
	fi
}

start_vdeswitch() {
    do_vdeswitch \
	-hub \
	-tap $KVM_BOOT_TAP_DEV \
	-mod 660 \
	-group kvm \
	-s /var/run/qemu-vde.ctl \
	--pidfile /var/run/qemu-vde.pid \
	-daemon
}

setup_nat() {
	enable_ip_forward
	add_filter_rules "$1"
}

allow_user_defaults

echo Setting up switch on $KVM_BOOT_TAP_DEV

start_vdeswitch
do_ifconfig $KVM_BOOT_TAP_DEV "$KVM_BOOT_GATEWAY" netmask "$KVM_BOOT_NETMASK" up

setup_nat $KVM_BOOT_TAP_DEV
start_dnsmasq $KVM_BOOT_TAP_DEV
